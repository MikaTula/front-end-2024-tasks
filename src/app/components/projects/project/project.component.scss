@use '../../../../scss/components/common' as common;

@mixin _private-apply-font($type-scale) {
    font-size: var(--mat-sys-#{$type-scale}-size);
    font-weight: var(--mat-sys-#{$type-scale}-weight);
    letter-spacing: var(--mat-sys-#{$type-scale}-tracking);
    line-height: var(--mat-sys-#{$type-scale}-line-height);
}


:host {
    display: grid;
    position: relative;
    overflow: hidden;
    isolation: isolate;
    cursor: pointer;

    grid: {
        template: {
            columns: min-content 1fr 1fr 40px 40px;
            rows: min-content min-content;
            areas: "project-code project-name project-created project-action-edit project-action-delete" "project-code project-name project-updated  project-action-edit project-action-delete";
        }
        column-gap: 16px;
    }
    --display: flex;
    @media (max-width: common.$breakpoint-small) {
        & {
            grid-template-columns: min-content 1fr 40px 40px;
            grid-template-areas:
                "project-code project-name project-action-edit project-action-delete"
            "project-code project-name  project-action-edit project-action-delete";
            --display: none;
        }
    }

    padding: 8px 16px;
    margin: 8px;
    border-radius: 8px;;

    color: var(--mat-sys-on-surface);

    &:hover {
        --_state-layer-opacity: var(--mat-sys-hover-state-layer-opacity);
    }

    &::after {
        content: '';
        position: absolute;
        inset: 0;
        z-index: -1;
        background-color: currentColor;

        opacity: var(--_state-layer-opacity, 0);
    }

    .app-project {
        &__code {
            grid-area: project-code;
            display: grid;
            align-items: center;

            width: 40px;
            height: 40px;
            padding: 4px;

        }

        &__name {
            grid-area: project-name;
            display: grid;
            align-items: center;
        }

        &__created-on {
            grid-area: project-created;
            display: var(--display);
            align-items: center;
            overflow: hidden;
            @include _private-apply-font(body-small);
        }

        &__modified-on {
            grid-area: project-updated;
            display: var(--display);
            align-items: center;
            overflow: hidden;
            @include _private-apply-font(body-small);
        }

        &__actions-edit {
            grid-area: project-action-edit;
            display: grid;
            align-items: center;
            border-radius: 1000px;
            cursor: pointer;
        }

        &__actions-delete {
            grid-area: project-action-delete;
            display: grid;
            align-items: center;
            border-radius: 1000px;
            cursor: pointer;
        }
    }
}

.ellipsis {
    display: block;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}
